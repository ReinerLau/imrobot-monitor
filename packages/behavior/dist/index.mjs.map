{"version":3,"sources":["../src/index.ts","../src/navigation.ts","../src/shared/index.ts"],"sourcesContent":["import { Extension, getTimestamp, reportData } from \"@imrobot/monitor-helpers\";\nimport { Behavior, BehaviorOptions } from \"../types\";\nimport { onNavigation } from \"./navigation\";\nimport {\n  behaviorStack,\n  BEHAVIORTYPES,\n  pushBehaviorStack,\n  setMaxStackNum,\n} from \"./shared\";\n\nconst onClick = () => {\n  document.addEventListener(\"click\", (ev: any) => {\n    const htmlString = elementToString(ev.target);\n    const data: Behavior = {\n      type: BEHAVIORTYPES.CLICK,\n      content: htmlString,\n      time: getTimestamp(),\n    };\n    pushBehaviorStack(data);\n  });\n};\n\nconst elementToString = (target: HTMLElement) => {\n  const tagName = target.tagName.toLowerCase();\n  const innerText = target.innerText;\n  return `<${tagName}>${innerText}</${tagName}>`;\n};\n\nconst install = (options?: BehaviorOptions) => {\n  setMaxStackNum(options?.maxStackNum);\n  onClick();\n  onNavigation();\n};\n\nconst afterEvent = (time: number) => {\n  if (behaviorStack.length > 0) {\n    const data = { time, data: behaviorStack };\n    reportData(\"/behavior\", data);\n    behaviorStack.length = 0;\n  }\n};\n\nconst extension: Extension = {\n  install,\n  afterEvent,\n};\n\nexport default extension;\n","import { getTimestamp } from \"@imrobot/monitor-helpers\";\nimport { Behavior } from \"../types\";\nimport { BEHAVIORTYPES, pushBehaviorStack } from \"./shared\";\n\n/**\n * 获取当前 URL\n * @returns 当前 URL\n */\nconst getLocationHref = () => {\n  return document.location.href;\n};\n\n/**\n * 上一个 URL\n */\nlet lastHref = getLocationHref();\n\n/**\n * 重写 popstate 事件\n */\nconst replacePopstate = () => {\n  const originalPopstate = window.onpopstate;\n  window.onpopstate = function (...args: any[]) {\n    const from = lastHref;\n    const to = getLocationHref();\n    lastHref = to;\n\n    const data: Behavior = {\n      type: BEHAVIORTYPES.NAVIGATION,\n      content: `${from} - ${to}`,\n      time: getTimestamp(),\n    };\n\n    pushBehaviorStack(data);\n\n    originalPopstate && originalPopstate.apply(this, args);\n  };\n};\n\n/**\n * 重写 pushstate 方法\n */\nconst replacePushstate = () => {\n  const orginalPushstate = history.pushState;\n\n  history.pushState = function (...args: any[]) {\n    const from = lastHref;\n    const to = args[2];\n    lastHref = to;\n\n    const data: Behavior = {\n      type: BEHAVIORTYPES.NAVIGATION,\n      content: `${from} - ${to}`,\n      time: getTimestamp(),\n    };\n\n    pushBehaviorStack(data);\n\n    orginalPushstate.apply(this, args);\n  };\n};\n\n/**\n * 监听路由跳转\n */\nexport const onNavigation = () => {\n  replacePopstate();\n  replacePushstate();\n};\n","import { Behavior } from \"../../types\";\n\n/**\n * 最大行为栈数量\n */\nexport let maxStackNum: number;\n\nexport const setMaxStackNum = (val?: number) => {\n  maxStackNum = val || 20;\n};\n\n/**\n * 新增行为\n * @param data 行为数据\n */\nexport const pushBehaviorStack = (data: Behavior) => {\n  behaviorStack.push(data);\n  if (behaviorStack.length > maxStackNum) {\n    behaviorStack.shift();\n  }\n};\n\n/**\n * 行为栈\n */\nexport const behaviorStack: Behavior[] = [];\n\nexport enum BEHAVIORTYPES {\n  CLICK = \"click\",\n  ERROR = \"error\",\n  XHR = \"xhr\",\n  NAVIGATION = \"navigation\",\n}\n"],"mappings":"AAAA,OAAoB,gBAAAA,EAAc,cAAAC,MAAkB,2BCApD,OAAS,gBAAAC,MAAoB,2BCKtB,IAAIC,EAEEC,EAAkBC,GAAiB,CAC9CF,EAAcE,GAAO,EACvB,EAMaC,EAAqBC,GAAmB,CACnDC,EAAc,KAAKD,CAAI,EACnBC,EAAc,OAASL,GACzBK,EAAc,MAAM,CAExB,EAKaA,EAA4B,CAAC,EDjB1C,IAAMC,EAAkB,IACf,SAAS,SAAS,KAMvBC,EAAWD,EAAgB,EAKzBE,EAAkB,IAAM,CAC5B,IAAMC,EAAmB,OAAO,WAChC,OAAO,WAAa,YAAaC,EAAa,CAC5C,IAAMC,EAAOJ,EACPK,EAAKN,EAAgB,EAC3BC,EAAWK,EAEX,IAAMC,EAAiB,CACrB,kBACA,QAAS,GAAGF,CAAI,MAAMC,CAAE,GACxB,KAAME,EAAa,CACrB,EAEAC,EAAkBF,CAAI,EAEtBJ,GAAoBA,EAAiB,MAAM,KAAMC,CAAI,CACvD,CACF,EAKMM,EAAmB,IAAM,CAC7B,IAAMC,EAAmB,QAAQ,UAEjC,QAAQ,UAAY,YAAaP,EAAa,CAC5C,IAAMC,EAAOJ,EACPK,EAAKF,EAAK,CAAC,EACjBH,EAAWK,EAEX,IAAMC,EAAiB,CACrB,kBACA,QAAS,GAAGF,CAAI,MAAMC,CAAE,GACxB,KAAME,EAAa,CACrB,EAEAC,EAAkBF,CAAI,EAEtBI,EAAiB,MAAM,KAAMP,CAAI,CACnC,CACF,EAKaQ,EAAe,IAAM,CAChCV,EAAgB,EAChBQ,EAAiB,CACnB,ED1DA,IAAMG,EAAU,IAAM,CACpB,SAAS,iBAAiB,QAAUC,GAAY,CAC9C,IAAMC,EAAaC,EAAgBF,EAAG,MAAM,EACtCG,EAAiB,CACrB,aACA,QAASF,EACT,KAAMG,EAAa,CACrB,EACAC,EAAkBF,CAAI,CACxB,CAAC,CACH,EAEMD,EAAmBI,GAAwB,CAC/C,IAAMC,EAAUD,EAAO,QAAQ,YAAY,EACrCE,EAAYF,EAAO,UACzB,MAAO,IAAIC,CAAO,IAAIC,CAAS,KAAKD,CAAO,GAC7C,EAEME,EAAWC,GAA8B,CAC7CC,EAAeD,GAAA,YAAAA,EAAS,WAAW,EACnCX,EAAQ,EACRa,EAAa,CACf,EAEMC,EAAcC,GAAiB,CAC/BC,EAAc,OAAS,IAEzBC,EAAW,YADE,CAAE,KAAAF,EAAM,KAAMC,CAAc,CACb,EAC5BA,EAAc,OAAS,EAE3B,EAEME,EAAuB,CAC3B,QAAAR,EACA,WAAAI,CACF,EAEOK,EAAQD","names":["getTimestamp","reportData","getTimestamp","maxStackNum","setMaxStackNum","val","pushBehaviorStack","data","behaviorStack","getLocationHref","lastHref","replacePopstate","originalPopstate","args","from","to","data","getTimestamp","pushBehaviorStack","replacePushstate","orginalPushstate","onNavigation","onClick","ev","htmlString","elementToString","data","getTimestamp","pushBehaviorStack","target","tagName","innerText","install","options","setMaxStackNum","onNavigation","afterEvent","time","behaviorStack","reportData","extension","src_default"]}